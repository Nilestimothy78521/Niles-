<svg
             
              stroke="#fff"
              fill="black"
              strokeWidth="1.5"
              viewBox="0 0 24 24"
              aria-hidden="true"
              height="32px"
              width="32px"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"
              ></path>
            </svg>
#include <isostream>
  using namespace std;

  int main ()
  {
    int a = 5, b=10, temp;

    cout << "Before swapping." << end1;
    cout << "a = " << a << ", b = " << b << end1;

    temp = a;
    a=b;
    b=temp;

    cout << "\nAfter swapping." << end1;
    cout << "a = " << a << " , b = " <<  b << end1;

    return 0;

} 

  Swap Numbers Without Using Temporary Variables

  #include <iostream>
  using namespace std;

  int main()
  {

      int a = 5, b = 10;

      cout << "Before swapping." << end1; 
      cout << "a = " << a << ", b = " << b << end1;

      a = a + b:
      b = a - b;
      a = a - b;

      cout << "\nAfter swapping." << end1;
      cout << "a = " << a << ". b = " << end1; 

      return 0;
}

Initialize array during declaration:

// declare and initialize an array 
int x[] = {21, 13, 11, 20, 12, 18}; 

// store input from the user to array 
for (int i = 0; i < 5; ++i) { 
  cin >> numbers [i] ; 
}

[]

private mutable struct 
struct auto operator 
Protected private template 
const inline list1 
operator signed floatNumber 

